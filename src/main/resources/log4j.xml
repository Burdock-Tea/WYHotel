<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE log4j:configuration SYSTEM "https://logging.apache.org/log4j/1.2/apidocs/org/apache/log4j/xml/doc-files/log4j.dtd">
<log4j:configuration xmlns:log4j="http://jakarta.apache.org/log4j/">

	<!--
		여태까지 벡엔드 로직을 작성할때 System.out.println()을 확인해왔는데..
		이건 단순히 출력만 가능하고, 로그에 대한 다양한 기능을 제공하는 log4j를 통해
		로그를 확인해보자! 
	 -->

	<!--
		Appenders
		appender : 로그의 출력 위치(파일, 콘솔, DB등)를 결정.
		ConsoleAppender : 콘솔에 로그 메세지를 출력
	-->
	<appender name="console" class="org.apache.log4j.ConsoleAppender">
		<param name="Target" value="System.out" />
		<layout class="org.apache.log4j.PatternLayout">
			<param name="ConversionPattern" value="%-5p: %c - %m%n" />
		</layout>
	</appender>
	
	<!--
		날짜별 로그 파일 생성
		설정한 기간 단위로 새 파일을 만들어서 로그 메세지를 기록.
		DailyRollingDileAppender : 설정한 기간 단위로 새 파일을 만들어서 로그 메세지를 기록 
	-->
	<appender name="rollingFile" class="org.apache.log4j.DailyRollingFileAppender">
		<param name="File" value="C:/LOG/all.log" />
		<param name="Append" value="true" />
		<!-- <param name="MaxFileSize" value="100MB" /> 단위는 바이트가 아니라 적기 편함 -->
		<param name="DatePattern" value="'.'yyyy-MM-dd"/>
		
		<!--
			로그 출력 시 형식 지정
			%p -> 로그 레벨 출력 (info, error, warn...) 
			%m -> 메세지
			%c -> 전체 패키지명 or 파일 이름 (%C -> 클래스 이름)
			%d -> 이벤트 발생 시각 (yyyy-MM-dd HH:mm:ss)
			앞에 숫자는요? 공백. 글자가 차지할 공간. 음수로 주면 좌측정렬, 양수 주면 우측으로 정렬
			[$C{number}] 이건요? 패키지명의 최대 레벨을 지정 (숫자가 더 많으면 패키지명이 더 자세하게 나오겠지? 
			%n -> 줄 개행 기호
		 -->
		<layout class="org.apache.log4j.PatternLayout">
			<param name="ConversionPattern" value="%d %p [%C{10}] %m%n" />
		</layout>
	</appender>
	
	<!-- 날짜별 로그 파일 생성 (에러만 체크!) -->
	<appender name="errFile" class="org.apache.log4j.DailyRollingFileAppender">
		<param name="Threshold" value="ERROR" />
		<param name="File" value="C:/LOG/error.log" />
		<param name="Append" value="true" />
		<!-- <param name="MaxFileSize" value="100MB" /> 단위는 바이트가 아니라 적기 편함 -->
		<param name="DatePattern" value="'.'yyyy-MM-dd"/>		
		<layout class="org.apache.log4j.PatternLayout">
			<param name="ConversionPattern" value="%d %p [%C{10}] %m%n" />
		</layout>
	</appender>
	
	<!--
		log4j의 여러가지 로그 레벨
		FATAL (가장 높음) : 가장 심각한 문제가 발생할 때 사용.
		ERROR - 문제가 발생한 상태
		WARN - 오류의 원인이 될 수 있는 메세지.
		INFO - 상태 변경 같은 실제 어플리케이션의 운영과 관련된 로직.
		DEBUG - 디버깅 용도
		TRACE (가장 낮음) - 가장 상세한 로깅 정보를 출력. 
	 -->
	<!-- aop 패키지를 로그레벨로 추가 -->
	<logger name="com.spring.myweb.util.aop">
		<level value="info" /> <!-- 최소 info 이상부터 출력이 가능! -->
	</logger> 
	
	<!-- Application Loggers -->
	<logger name="com.spring.myweb">
		<level value="info" /> <!-- 최소 info 이상부터 출력이 가능! -->
	</logger>
	
	<!-- 3rdparty Loggers -->
	<logger name="org.springframework.core">
		<level value="info" />
	</logger>
	
	<logger name="org.springframework.beans">
		<level value="info" />
	</logger>
	
	<logger name="org.springframework.context">
		<level value="info" />
	</logger>

	<logger name="org.springframework.web">
		<level value="info" />
	</logger>
	
	<!-- SQL Logger -->
	<!-- DB연결에 관련된 이벤트를 기록 (Connection pool 등 ...) -->
	<logger name="jdbc.connection" additivity="false">
		<level value="warn" />
		<appender-ref ref="console"/>
	</logger>
	<!-- ResultSet을 제외한 모든 JDBC 호출 내역을 기록. -->
	<logger name="jdbc.audit" additivity="false">
		<level value="warn" />
		<appender-ref ref="console"/>
	</logger>
	<!-- ResultSet을 포함한 모든 호출 내역을 기록 -->
	<logger name="jdbc.resultset" additivity="false">
		<level value="warn" />
		<appender-ref ref="console"/>
	</logger>
	
	<!-- SQL문만 기록. (?값이 드러납니다.) -->
	<logger name="jdbc.sqlonly" additivity="false">
		<level value="info" />
		<appender-ref ref="console"/>
	</logger>
	
	<!-- table 모양으로 조회된 내용응 기록합니다. -->
	<logger name="jdbc.resultsettable" additivity="false">
		<level value="info" />
		<appender-ref ref="console"/>
	</logger>
	
	<!-- 해당 SQL을 실행시키는 데 소요한 시간 정보 기록 (밀리초) -->
	<logger name="jdbc.sqltiming" additivity="false">
		<level value="info" />
		<appender-ref ref="console"/>
	</logger>

	<!-- Root Logger -->
	<root>
		<priority value="warn" />
		<appender-ref ref="console" />
		<appender-ref ref="errFile" />
		<appender-ref ref="rollingFile" />
	</root>
	
</log4j:configuration>
